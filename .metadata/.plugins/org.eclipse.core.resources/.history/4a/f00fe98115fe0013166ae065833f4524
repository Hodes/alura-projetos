package br.com.caelum.leilao.teste;

import static com.jayway.restassured.RestAssured.*;
import static org.junit.Assert.*;

import java.util.List;

import org.junit.Test;

import br.com.caelum.leilao.modelo.Leilao;
import br.com.caelum.leilao.modelo.Usuario;

import com.jayway.restassured.path.json.JsonPath;
import com.jayway.restassured.path.xml.XmlPath;

public class UsuariosTest {

	@Test
	public void deveRetornarListaDeUsuarios() {
	    XmlPath path = given()
	    			.header("Accept", "application/xml")
	    			.get("/usuarios?_format=xml")
	    			.andReturn()
	    			.xmlPath();
	
	    List<Usuario> usuarios = path.getList("list.usuario", Usuario.class);

	    Usuario esperado1 = new Usuario(1L, "Mauricio Aniche", "mauricio.aniche@caelum.com.br");
	    Usuario esperado2 = new Usuario(2L, "Guilherme Silveira", "guilherme.silveira@caelum.com.br");
	
	    assertEquals(esperado1, usuarios.get(0));
	    assertEquals(esperado2, usuarios.get(1));
	
	}
	
	@Test
	public void deveRetornarUmUsuario() {
		JsonPath path = given()
				.queryParam("usuario.id", 1)
				.header("Accept", "application/json")
				.get("usuarios/show")
				.andReturn()
				.jsonPath();
		
		Usuario u = path.getObject("usuario", Usuario.class);
		Usuario esperado = new Usuario(1L, "Mauricio Aniche", "mauricio.aniche@caelum.com.br");
		
		assertEquals(u, esperado);
	}
	
	@Test
	public void deveRetornarUmLeilao() {
		XmlPath path = given()
				.parameter("leilao.id", 1)
				.header("Accept", "application/xml")
				.get("leiloes/total")
				.andReturn()
				.xmlPath();
		
		assertEquals(2, path.getInt("int"));
	}
	
	@Test
	public void deveIncluirUsuario() {
		Usuario u = new Usuario("Luiz", "l@u.com");
		
		XmlPath path = given()
				.header("Accept", "application/xml")
				.contentType("application/xml")
				.body(u)
				.expect()
				.statusCode(200)
				.when()
				.post("/usuarios")
				.andReturn()
				.xmlPath();
		
		Usuario r = path.getObject("usuario", Usuario.class);
		given()
		.parameter("usuario.id", 123)
		.delete("usarios/deletar");
		assertEquals("Luiz", r.getNome());
		assertEquals("l@u.com", r.getEmail());
	}
}
